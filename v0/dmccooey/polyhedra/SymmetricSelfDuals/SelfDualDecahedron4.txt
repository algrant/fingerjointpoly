Self-Dual Decahedron #4 (canonical)

C0  = 0.189264966656133956144792810567  = (2 * sqrt(10) - 3 * sqrt(2)) / 11
C1  = 0.3278165383412534522315948574453 = (2 * sqrt(30) - 3 * sqrt(6)) / 11
C2  = 0.378529933312267912289585621134  = 2 * (2 * sqrt(10) - 3 * sqrt(2)) / 11
C3  = 0.408881731069662298124372716771  = sqrt(15) - 2 * sqrt(3)
C4  = 0.540181513475452907203086314098  = (3 * sqrt(2) - sqrt(10)) / 2
C5  = 0.632455532033675866399778708887  = sqrt(10) / 5
C6  = 0.774596669241483377035853079956  = sqrt(15) / 5
C7  = 0.9356218266489365800110771980548 = (3 * sqrt(6) - sqrt(30)) / 2
C8  = 0.981926052407538732662640978710  = (4 * sqrt(3) + sqrt(15)) / 11
C9  = 1.01840662802269742964350665541   = (4 * sqrt(3) - sqrt(15)) / 3
C10 = 1.08036302695090581440617262820   = 3 * sqrt(2) - sqrt(10)
C11 = 1.09544511501033222691393956560   = sqrt(30) / 5
C12 = 1.26491106406735173279955741777   = 2 * sqrt(10) / 5

V0 = ( 0.0,  0.0,  C9)
V1 = ( 0.0,  C12,  C6)
V2 = (-C11,  -C5,  C6)
V3 = ( C11,  -C5,  C6)
V4 = ( 0.0, -C10, -C3)
V5 = (  C7,   C4, -C3)
V6 = ( -C7,   C4, -C3)
V7 = ( 0.0,  -C2, -C8)
V8 = (  C1,   C0, -C8)
V9 = ( -C1,   C0, -C8)

Faces:
{ 1, 5, 8, 9, 6 }
{ 2, 6, 9, 7, 4 }
{ 3, 4, 7, 8, 5 }
{ 1, 6, 2 }
{ 1, 2, 0 }
{ 2, 4, 3 }
{ 2, 3, 0 }
{ 3, 5, 1 }
{ 3, 1, 0 }
{ 7, 9, 8 }
