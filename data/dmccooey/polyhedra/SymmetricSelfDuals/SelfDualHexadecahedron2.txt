Self-Dual Hexadecahedron #2 (canonical)

C0  = 0.116730079047612076444708452883
C1  = 0.149467705090528747626076083322
C2  = 0.301383774023001809154628166327
C3  = 0.409779378984496924303814955108
C4  = 0.435338203395426139994429314538
C5  = 0.5165703504061740016552088831948
C6  = 0.586457063317792713572549695581
C7  = 0.648951581402815897477810950674
C8  = 0.658714183615300348457521290660
C9  = 0.665475525164650187534954067284
C10 = 0.780971909463062054440938716831
C11 = 0.829001024699958478579976304984
C12 = 0.912590402935222551714266991478
C13 = 6.69040846913602975426847106276

C0  = 11 - 5 * sqrt(5) + sqrt(3 * (85 - 38 * sqrt(5)))
C1  = sqrt(1 - sqrt(5) + sqrt(3 * (5 - 2 * sqrt(5))))
C2  = (9 * sqrt(5) - 23 + sqrt(30 * (25 - 11 * sqrt(5)))) / 2
C3  = sqrt(11 * sqrt(5) - 59 + sqrt(3 * (1825 - 638 * sqrt(5))))
C4  = sqrt(sqrt(5) - 19 + sqrt(3 * (145 - 22 * sqrt(5))))
C5  = 11 - 3 * sqrt(5) - 3 * sqrt(3 * (5 - 2 * sqrt(5)))
C6  = sqrt(77 * sqrt(5) - 179 + sqrt(3 * (22105 - 9878 * sqrt(5))))
C7  = sqrt(115 * sqrt(5) - 259 + sqrt(3 * (47545 - 21262 * sqrt(5))))
C8  = sqrt(41 * sqrt(5) - 119 + sqrt(3 * (7685 - 3322 * sqrt(5))))
C9  = (3 * sqrt(5) - 17 + sqrt(6 * (65 - 19 * sqrt(5)))) / 2
C10 = sqrt(107 * sqrt(5) - 239 + 5 * sqrt(3 * (1525 - 682 * sqrt(5))))
C11 = (13 - sqrt(5) - sqrt(30 * (5 - sqrt(5)))) / 2
C12 = (sqrt(5) - 7 + sqrt(6 * (5 + sqrt(5)))) / 2
C13 = sqrt(11 + 5 * sqrt(5) + sqrt(3 * (85 + 38 * sqrt(5))))

V0  = (  C1,  -C1,  1.0)
V1  = ( -C1,   C1,  1.0)
V2  = ( -C1,  -C1, -1.0)
V3  = ( C13,  C13, -1.0)
V4  = ( -C4,   C1, -C12)
V5  = (  C1,  -C4, -C12)
V6  = ( -C4,   C3,  C11)
V7  = (  C3,  -C4,  C11)
V8  = ( -C8,   C3,  -C9)
V9  = (  C3,  -C8,  -C9)
V10 = ( -C8,   C6,   C5)
V11 = (  C6,  -C8,   C5)
V12 = (-C10,   C6,  -C2)
V13 = (  C6, -C10,  -C2)
V14 = (-C10,   C7,   C0)
V15 = (  C7, -C10,   C0)

Faces:
{  0,  1,  6, 10, 14, 12,  8,  4,  2,  5,  9, 13, 15, 11,  7 }
{  3,  0,  7 }
{  3,  1,  0 }
{  3,  2,  4 }
{  3,  4,  8 }
{  3,  5,  2 }
{  3,  6,  1 }
{  3,  7, 11 }
{  3,  8, 12 }
{  3,  9,  5 }
{  3, 10,  6 }
{  3, 11, 15 }
{  3, 12, 14 }
{  3, 13,  9 }
{  3, 14, 10 }
{  3, 15, 13 }
