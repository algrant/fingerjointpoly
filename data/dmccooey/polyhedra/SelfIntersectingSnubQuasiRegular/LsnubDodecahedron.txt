Snub Dodecahedron (laevo)

C0  = 0.192893711352359022108262546061
C1  = 0.330921024729844230963655269187
C2  = 0.374821658114562295266609516608
C3  = 0.567715369466921317374872062669
C4  = 0.643029605914072573107464141441
C5  = 0.728335176957191477360671629838
C6  = 0.847550046789060797396217956030
C7  = 1.103156835071753772627281146446
C8  = 1.24950378846302719500774109632
C9  = 1.41526541625598211477109001870
C10 = 1.45402422933801541929649491091
C11 = 1.64691794069037444140475745697
C12 = 1.74618644098582634573474528789
C13 = 1.97783896542021867236841272616
C14 = 2.097053835252087992403959052348

C0  = phi * sqrt(3 - (x^2)) / 2
C1  = x * phi * sqrt(3 - (x^2)) / 2
C2  = phi * sqrt((x - 1 - (1/x)) * phi) / 2
C3  = (x^2) * phi * sqrt(3 - (x^2)) / 2
C4  = x * phi * sqrt((x - 1 - (1/x)) * phi) / 2
C5  = phi * sqrt(1 - x + (1 + phi) / x) / 2
C6  = phi * sqrt(x + 1 - phi) / 2
C7  = (x^2) * phi * sqrt((x - 1 - (1/x)) * phi) / 2
C8  = x * phi * sqrt(1 - x + (1 + phi) / x) / 2
C9  = sqrt((x + 2) * phi + 2) / 2
C10 = x * sqrt(x * (1 + phi) - phi) / 2
C11 = sqrt((x^2) * (1 + 2 * phi) - phi) / 2
C12 = phi * sqrt((x^2) + x) / 2
C13 = (phi^2) * sqrt(x * (x + phi) + 1) / (2 * x)
C14 = phi * sqrt(x * (x + phi) + 1) / 2
WHERE:  phi = (1 + sqrt(5)) / 2
        x = cbrt((phi + sqrt(phi-5/27))/2) + cbrt((phi - sqrt(phi-5/27))/2)

V0  = (  C2,  -C1,  C14)
V1  = (  C2,   C1, -C14)
V2  = ( -C2,   C1,  C14)
V3  = ( -C2,  -C1, -C14)
V4  = ( C14,  -C2,   C1)
V5  = ( C14,   C2,  -C1)
V6  = (-C14,   C2,   C1)
V7  = (-C14,  -C2,  -C1)
V8  = (  C1, -C14,   C2)
V9  = (  C1,  C14,  -C2)
V10 = ( -C1,  C14,   C2)
V11 = ( -C1, -C14,  -C2)
V12 = (  C3,   C4,  C13)
V13 = (  C3,  -C4, -C13)
V14 = ( -C3,  -C4,  C13)
V15 = ( -C3,   C4, -C13)
V16 = ( C13,   C3,   C4)
V17 = ( C13,  -C3,  -C4)
V18 = (-C13,  -C3,   C4)
V19 = (-C13,   C3,  -C4)
V20 = (  C4,  C13,   C3)
V21 = (  C4, -C13,  -C3)
V22 = ( -C4, -C13,   C3)
V23 = ( -C4,  C13,  -C3)
V24 = (  C0,  -C8,  C12)
V25 = (  C0,   C8, -C12)
V26 = ( -C0,   C8,  C12)
V27 = ( -C0,  -C8, -C12)
V28 = ( C12,  -C0,   C8)
V29 = ( C12,   C0,  -C8)
V30 = (-C12,   C0,   C8)
V31 = (-C12,  -C0,  -C8)
V32 = (  C8, -C12,   C0)
V33 = (  C8,  C12,  -C0)
V34 = ( -C8,  C12,   C0)
V35 = ( -C8, -C12,  -C0)
V36 = (  C7,  -C6,  C11)
V37 = (  C7,   C6, -C11)
V38 = ( -C7,   C6,  C11)
V39 = ( -C7,  -C6, -C11)
V40 = ( C11,  -C7,   C6)
V41 = ( C11,   C7,  -C6)
V42 = (-C11,   C7,   C6)
V43 = (-C11,  -C7,  -C6)
V44 = (  C6, -C11,   C7)
V45 = (  C6,  C11,  -C7)
V46 = ( -C6,  C11,   C7)
V47 = ( -C6, -C11,  -C7)
V48 = (  C9,   C5,  C10)
V49 = (  C9,  -C5, -C10)
V50 = ( -C9,  -C5,  C10)
V51 = ( -C9,   C5, -C10)
V52 = ( C10,   C9,   C5)
V53 = ( C10,  -C9,  -C5)
V54 = (-C10,  -C9,   C5)
V55 = (-C10,   C9,  -C5)
V56 = (  C5,  C10,   C9)
V57 = (  C5, -C10,  -C9)
V58 = ( -C5, -C10,   C9)
V59 = ( -C5,  C10,  -C9)

Faces:
{  0, 36, 28, 48, 12 }
{  1, 37, 29, 49, 13 }
{  2, 38, 30, 50, 14 }
{  3, 39, 31, 51, 15 }
{  4, 40, 32, 53, 17 }
{  5, 41, 33, 52, 16 }
{  6, 42, 34, 55, 19 }
{  7, 43, 35, 54, 18 }
{  8, 44, 24, 58, 22 }
{  9, 45, 25, 59, 23 }
{ 10, 46, 26, 56, 20 }
{ 11, 47, 27, 57, 21 }
{  0,  2, 14 }
{  1,  3, 15 }
{  2,  0, 12 }
{  3,  1, 13 }
{  4,  5, 16 }
{  5,  4, 17 }
{  6,  7, 18 }
{  7,  6, 19 }
{  8, 11, 21 }
{  9, 10, 20 }
{ 10,  9, 23 }
{ 11,  8, 22 }
{ 12, 48, 56 }
{ 13, 49, 57 }
{ 14, 50, 58 }
{ 15, 51, 59 }
{ 16, 52, 48 }
{ 17, 53, 49 }
{ 18, 54, 50 }
{ 19, 55, 51 }
{ 20, 56, 52 }
{ 21, 57, 53 }
{ 22, 58, 54 }
{ 23, 59, 55 }
{ 24, 44, 36 }
{ 25, 45, 37 }
{ 26, 46, 38 }
{ 27, 47, 39 }
{ 28, 36, 40 }
{ 29, 37, 41 }
{ 30, 38, 42 }
{ 31, 39, 43 }
{ 32, 40, 44 }
{ 33, 41, 45 }
{ 34, 42, 46 }
{ 35, 43, 47 }
{ 36,  0, 24 }
{ 37,  1, 25 }
{ 38,  2, 26 }
{ 39,  3, 27 }
{ 40,  4, 28 }
{ 41,  5, 29 }
{ 42,  6, 30 }
{ 43,  7, 31 }
{ 44,  8, 32 }
{ 45,  9, 33 }
{ 46, 10, 34 }
{ 47, 11, 35 }
{ 48, 28, 16 }
{ 49, 29, 17 }
{ 50, 30, 18 }
{ 51, 31, 19 }
{ 52, 33, 20 }
{ 53, 32, 21 }
{ 54, 35, 22 }
{ 55, 34, 23 }
{ 56, 26, 12 }
{ 57, 27, 13 }
{ 58, 24, 14 }
{ 59, 25, 15 }
{ 24,  0, 14 }
{ 25,  1, 15 }
{ 26,  2, 12 }
{ 27,  3, 13 }
{ 28,  4, 16 }
{ 29,  5, 17 }
{ 30,  6, 18 }
{ 31,  7, 19 }
{ 32,  8, 21 }
{ 33,  9, 20 }
{ 34, 10, 23 }
{ 35, 11, 22 }
{ 36, 44, 40 }
{ 37, 45, 41 }
{ 38, 46, 42 }
{ 39, 47, 43 }
{ 48, 52, 56 }
{ 49, 53, 57 }
{ 50, 54, 58 }
{ 51, 55, 59 }
