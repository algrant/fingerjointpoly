Snub Dodecahedron (dextro)

C0  = 0.192893711352359022108262546061
C1  = 0.330921024729844230963655269187
C2  = 0.374821658114562295266609516608
C3  = 0.567715369466921317374872062669
C4  = 0.643029605914072573107464141441
C5  = 0.728335176957191477360671629838
C6  = 0.847550046789060797396217956030
C7  = 1.103156835071753772627281146446
C8  = 1.24950378846302719500774109632
C9  = 1.41526541625598211477109001870
C10 = 1.45402422933801541929649491091
C11 = 1.64691794069037444140475745697
C12 = 1.74618644098582634573474528789
C13 = 1.97783896542021867236841272616
C14 = 2.097053835252087992403959052348

C0  = phi * sqrt(3 - (x^2)) / 2
C1  = x * phi * sqrt(3 - (x^2)) / 2
C2  = phi * sqrt((x - 1 - (1/x)) * phi) / 2
C3  = (x^2) * phi * sqrt(3 - (x^2)) / 2
C4  = x * phi * sqrt((x - 1 - (1/x)) * phi) / 2
C5  = phi * sqrt(1 - x + (1 + phi) / x) / 2
C6  = phi * sqrt(x + 1 - phi) / 2
C7  = (x^2) * phi * sqrt((x - 1 - (1/x)) * phi) / 2
C8  = x * phi * sqrt(1 - x + (1 + phi) / x) / 2
C9  = sqrt((x + 2) * phi + 2) / 2
C10 = x * sqrt(x * (1 + phi) - phi) / 2
C11 = sqrt((x^2) * (1 + 2 * phi) - phi) / 2
C12 = phi * sqrt((x^2) + x) / 2
C13 = (phi^2) * sqrt(x * (x + phi) + 1) / (2 * x)
C14 = phi * sqrt(x * (x + phi) + 1) / 2
WHERE:  phi = (1 + sqrt(5)) / 2
        x = cbrt((phi + sqrt(phi-5/27))/2) + cbrt((phi - sqrt(phi-5/27))/2)

V0  = (  C2,   C1,  C14)
V1  = (  C2,  -C1, -C14)
V2  = ( -C2,  -C1,  C14)
V3  = ( -C2,   C1, -C14)
V4  = ( C14,   C2,   C1)
V5  = ( C14,  -C2,  -C1)
V6  = (-C14,  -C2,   C1)
V7  = (-C14,   C2,  -C1)
V8  = (  C1,  C14,   C2)
V9  = (  C1, -C14,  -C2)
V10 = ( -C1, -C14,   C2)
V11 = ( -C1,  C14,  -C2)
V12 = (  C3,  -C4,  C13)
V13 = (  C3,   C4, -C13)
V14 = ( -C3,   C4,  C13)
V15 = ( -C3,  -C4, -C13)
V16 = ( C13,  -C3,   C4)
V17 = ( C13,   C3,  -C4)
V18 = (-C13,   C3,   C4)
V19 = (-C13,  -C3,  -C4)
V20 = (  C4, -C13,   C3)
V21 = (  C4,  C13,  -C3)
V22 = ( -C4,  C13,   C3)
V23 = ( -C4, -C13,  -C3)
V24 = (  C0,   C8,  C12)
V25 = (  C0,  -C8, -C12)
V26 = ( -C0,  -C8,  C12)
V27 = ( -C0,   C8, -C12)
V28 = ( C12,   C0,   C8)
V29 = ( C12,  -C0,  -C8)
V30 = (-C12,  -C0,   C8)
V31 = (-C12,   C0,  -C8)
V32 = (  C8,  C12,   C0)
V33 = (  C8, -C12,  -C0)
V34 = ( -C8, -C12,   C0)
V35 = ( -C8,  C12,  -C0)
V36 = (  C7,   C6,  C11)
V37 = (  C7,  -C6, -C11)
V38 = ( -C7,  -C6,  C11)
V39 = ( -C7,   C6, -C11)
V40 = ( C11,   C7,   C6)
V41 = ( C11,  -C7,  -C6)
V42 = (-C11,  -C7,   C6)
V43 = (-C11,   C7,  -C6)
V44 = (  C6,  C11,   C7)
V45 = (  C6, -C11,  -C7)
V46 = ( -C6, -C11,   C7)
V47 = ( -C6,  C11,  -C7)
V48 = (  C9,  -C5,  C10)
V49 = (  C9,   C5, -C10)
V50 = ( -C9,   C5,  C10)
V51 = ( -C9,  -C5, -C10)
V52 = ( C10,  -C9,   C5)
V53 = ( C10,   C9,  -C5)
V54 = (-C10,   C9,   C5)
V55 = (-C10,  -C9,  -C5)
V56 = (  C5, -C10,   C9)
V57 = (  C5,  C10,  -C9)
V58 = ( -C5,  C10,   C9)
V59 = ( -C5, -C10,  -C9)

Faces:
{  0, 12, 48, 28, 36 }
{  1, 13, 49, 29, 37 }
{  2, 14, 50, 30, 38 }
{  3, 15, 51, 31, 39 }
{  4, 17, 53, 32, 40 }
{  5, 16, 52, 33, 41 }
{  6, 19, 55, 34, 42 }
{  7, 18, 54, 35, 43 }
{  8, 22, 58, 24, 44 }
{  9, 23, 59, 25, 45 }
{ 10, 20, 56, 26, 46 }
{ 11, 21, 57, 27, 47 }
{  0, 14,  2 }
{  1, 15,  3 }
{  2, 12,  0 }
{  3, 13,  1 }
{  4, 16,  5 }
{  5, 17,  4 }
{  6, 18,  7 }
{  7, 19,  6 }
{  8, 21, 11 }
{  9, 20, 10 }
{ 10, 23,  9 }
{ 11, 22,  8 }
{ 12, 56, 48 }
{ 13, 57, 49 }
{ 14, 58, 50 }
{ 15, 59, 51 }
{ 16, 48, 52 }
{ 17, 49, 53 }
{ 18, 50, 54 }
{ 19, 51, 55 }
{ 20, 52, 56 }
{ 21, 53, 57 }
{ 22, 54, 58 }
{ 23, 55, 59 }
{ 24, 36, 44 }
{ 25, 37, 45 }
{ 26, 38, 46 }
{ 27, 39, 47 }
{ 28, 40, 36 }
{ 29, 41, 37 }
{ 30, 42, 38 }
{ 31, 43, 39 }
{ 32, 44, 40 }
{ 33, 45, 41 }
{ 34, 46, 42 }
{ 35, 47, 43 }
{ 36, 24,  0 }
{ 37, 25,  1 }
{ 38, 26,  2 }
{ 39, 27,  3 }
{ 40, 28,  4 }
{ 41, 29,  5 }
{ 42, 30,  6 }
{ 43, 31,  7 }
{ 44, 32,  8 }
{ 45, 33,  9 }
{ 46, 34, 10 }
{ 47, 35, 11 }
{ 48, 16, 28 }
{ 49, 17, 29 }
{ 50, 18, 30 }
{ 51, 19, 31 }
{ 52, 20, 33 }
{ 53, 21, 32 }
{ 54, 22, 35 }
{ 55, 23, 34 }
{ 56, 12, 26 }
{ 57, 13, 27 }
{ 58, 14, 24 }
{ 59, 15, 25 }
{ 24, 14,  0 }
{ 25, 15,  1 }
{ 26, 12,  2 }
{ 27, 13,  3 }
{ 28, 16,  4 }
{ 29, 17,  5 }
{ 30, 18,  6 }
{ 31, 19,  7 }
{ 32, 21,  8 }
{ 33, 20,  9 }
{ 34, 23, 10 }
{ 35, 22, 11 }
{ 36, 40, 44 }
{ 37, 41, 45 }
{ 38, 42, 46 }
{ 39, 43, 47 }
{ 48, 56, 52 }
{ 49, 57, 53 }
{ 50, 58, 54 }
{ 51, 59, 55 }
