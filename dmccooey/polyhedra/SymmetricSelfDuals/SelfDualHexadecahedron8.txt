Self-Dual Hexadecahedron #8 (canonical)

C0  = 0.0779126002971256198886547461624  = sqrt(37 * sqrt(5) - 82) / 11
C1  = 0.115541752799932702850935573994   = (8 * sqrt(5) - 15) / 25
C2  = 0.1739009663000588850054313727552  = (20 - 7 * sqrt(5)) / 25
C3  = 0.236067977499789696409173668731   = sqrt(5) - 2
C4  = 0.330043071162394438405554383570   = sqrt(2 + 5 * sqrt(5)) / 11
C5  = 0.348030350000048345653063524430   = 5 * (15 - 4 * sqrt(5)) / 87
C6  = 0.357917930453297350186073566169   = sqrt(5 * (17 * sqrt(5) - 22)) / 25
C7  = 0.358570173636287162330608606811   = (4 * sqrt(5) - 5) / 11
C8  = 0.481072369772784628252043544891   = 3 * (4 - sqrt(5)) / 11
C9  = 0.48586827175664567818286387589453 = sqrt(sqrt(5) - 2)
C10 = 0.642229123600033648574532213003   = (25 - 4 * sqrt(5)) / 25
C11 = 0.716305982981256496524276541924   = 5 * sqrt(5 * (2 + 13*sqrt(5))) / 87
C12 = 0.726094756557267764492219643853   = sqrt(2 + 5 * sqrt(5)) / 5
C13 = 0.953640548959581007403542814527   = sqrt(5 * (22 + 41 * sqrt(5))) / 25
C14 = 0.990129213487183315216663150709   = 3 * sqrt(2 + 5 * sqrt(5)) / 11
C15 = 1.08643448375820089395625329579    = sqrt(5 * (sqrt(5) - 2))

V0  = (  C9,   C9, -1.0)
V1  = (  C9,  -C9,  1.0)
V2  = ( -C9,   C9,  1.0)
V3  = ( -C4,  -C4, -1.0)
V4  = ( C12,   C6,  C10)
V5  = (  C6,  C12,  C10)
V6  = (-C14,   C0,  -C8)
V7  = (  C0, -C14,  -C8)
V8  = (-C14,  -C4,   C7)
V9  = ( -C4, -C14,   C7)
V10 = (-C11, -C11,  -C5)
V11 = ( C15,  -C9,  -C3)
V12 = ( -C9,  C15,  -C3)
V13 = ( C13,   C6,   C2)
V14 = (  C6,  C13,   C2)
V15 = ( C12,  C12,  -C1)

Faces:
{  4, 13, 15, 14,  5 }
{  0,  3,  6, 12 }
{  0, 11,  7,  3 }
{  0, 12, 14, 15 }
{  0, 15, 13, 11 }
{  1,  2,  8,  9 }
{  1,  4,  5,  2 }
{  1,  9,  7, 11 }
{  1, 11, 13,  4 }
{  2,  5, 14, 12 }
{  2, 12,  6,  8 }
{ 10,  3,  7 }
{ 10,  6,  3 }
{ 10,  7,  9 }
{ 10,  8,  6 }
{ 10,  9,  8 }
